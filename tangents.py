listGoodIDs = [1 ,3 ,4 ,6 ,7 ,9 ,11 ,12 ,14 ,15 ,16 ,18 ,21 ,22 ,23 ,25 ,27 ,28 ,29 ,30 ,32 ,33 ,36 ,37 ,39 ,40 ,42 ,43 ,44 ,46 ,47 ,48 ,50 ,51 ,54 ,55 ,56 ,57 ,59 ,60 ,62 ,65 ,66 ,68 ,70 ,71 ,72 ,73 ,74 ,75 ,78 ,81 ,82 ,83 ,84 ,86 ,89 ,91 ,92 ,94 ,96 ,98 ,100 ,102 ,104 ,106 ,107 ,108 ,109 ,111 ,112 ,113 ,116 ,118 ,119 ,120 ,121 ,122 ,124 ,125 ,127 ,128 ,131 ,132 ,133 ,134 ,135 ,138 ,140 ,141 ,143 ,144 ,145 ,148 ,149 ,151 ,153 ,154 ,155 ,156 ,157 ,158 ,159 ,161 ,162 ,163 ,164 ,165 ,167 ,169 ,172 ,173 ,174 ,175 ,176 ,177 ,180 ,181 ,182 ,183 ,184 ,185 ,187 ,189 ,193 ,194 ,195 ,197 ,198 ,201 ,203 ,204 ,206 ,209 ,211 ,212 ,213 ,214 ,215 ,217 ,219 ,220 ,222 ,223 ,224 ,225 ,226 ,227 ,231 ,232 ,234 ,236 ,237 ,238 ,241 ,243 ,245 ,246 ,247 ,248 ,249 ,251 ,252 ,253 ,255 ,258 ,259 ,260 ,261 ,262 ,264 ,265 ,266 ,268 ,270 ,271 ,273 ,274 ,275 ,276 ,277 ,278 ,280 ,282 ,283 ,284 ,285 ,286 ,288 ,289 ,290 ,292 ,293 ,294 ,296 ,297 ,298 ,300 ,303 ,304 ,306 ,307 ,308 ,309 ,310 ,311 ,312 ,314 ,315 ,316 ,317 ,318 ,319 ,320 ,321 ,323 ,325 ,327 ,328 ,329 ,331 ,333 ,334 ,335 ,337 ,338 ,339 ,341 ,344 ,346 ,350 ,351 ,353 ,355 ,356 ,358 ,361 ,362 ,363 ,364 ,366 ,367 ,368 ,369 ,370 ,371 ,373 ,374 ,375 ,376 ,377 ,378 ,379 ,381 ,382 ,384 ,385 ,386 ,387 ,388 ,390 ,392 ,394 ,395 ,396 ,398 ,399 ,400 ,402 ,403 ,404 ,406 ,407 ,408 ,409 ,410 ,411 ,412 ,413 ,414 ,416 ,417 ,419 ,420 ,422 ,424 ,425 ,426 ,428 ,430 ,432 ,434 ,435 ,436 ,438 ,439 ,440 ,441 ,442 ,443 ,444 ,445 ,446 ,447 ,448 ,450 ,452 ,453 ,454 ,456 ,457 ,458 ,461 ,462 ,463 ,464 ,465 ,466 ,468 ,469 ,471 ,472 ,473 ,474 ,475 ,476 ,477 ,479 ,480 ,481 ,482 ,484 ,486 ,488 ,490 ,493 ,494 ,495 ,496 ,498 ,500 ,501 ,502 ,503 ,504 ,505 ,507 ,509 ,510 ,511 ,512 ,513 ,515 ,517 ,519 ,520 ,521 ,523 ,524 ,525 ,526 ,527 ,528 ,530 ,533 ,535 ,537 ,538 ,539 ,541 ,542 ,543 ,544 ,545 ,546 ,548 ,549 ,550 ,553 ,554 ,556 ,558 ,559 ,561 ,563 ,565 ,566 ,567 ,568 ,569 ,570 ,571 ,572 ,574 ,576 ,577 ,578 ,580 ,581 ,583 ,584 ,585 ,586 ,587 ,588 ,590 ,592 ,593 ,594 ,595 ,596 ,597 ,598 ,601 ,602 ,605 ,606 ,607 ,609 ,610 ,611 ,612 ,613 ,614 ,616 ,617 ,618 ,622 ,624 ,625 ,627 ,628 ,630 ,632 ,635 ,636 ,637 ,638 ,639 ,642 ,644 ,645 ,646 ,647 ,649 ,650 ,652 ,653 ,656 ,658 ,660 ,661 ,663 ,664 ,665 ,666 ,668 ,669 ,670 ,671 ,673 ,675 ,676 ,678 ,679 ,680 ,682 ,683 ,685 ,687 ,688 ,690 ,691 ,692 ,693 ,694 ,695 ,696 ,697 ,698 ,699 ,700 ,701 ,702 ,703 ,704 ,705 ,706 ,707 ,709 ,711 ,712 ,714 ,716 ,717 ,719 ,721 ,723 ,724 ,725 ,727 ,728 ,730 ,733 ,735 ,736 ,737 ,738 ,739 ,740 ,742 ,744 ,746 ,747 ,748 ,749 ,751 ,752 ,754 ,755 ,756 ,757 ,758 ,760 ,761 ,762 ,763 ,766 ,768 ,769 ,771 ,773 ,774 ,776 ,777 ,779 ,780 ,781 ,782 ,783 ,785 ,786 ,788 ,789 ,792 ,793 ,794 ,796 ,803 ,804]


def getDistance(inTuplePt0, inTuplePt1):
    
    
listPts = []    
for row in cur:
    ptID = row[0]
    ptX = row[-1][0]
    ptY = row[-1][1]
    print str(ptID), str( ptX), str(ptY)
    listPts.append( (ptID, (ptX, ptY)) )

listDistances = []
import numpy as np
first = True
for pt in listPts:
    if first: 
        lastID = pt[0]
        lastTXY = pt[1]
    else:
        thisID = pt[0]
        thisTXY = pt[1]
        list
        
    






















